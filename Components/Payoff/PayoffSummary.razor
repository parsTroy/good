@using good.Models
@using good.Utils
@using Microsoft.AspNetCore.Components
@namespace good.Components.Payoff

<div class="bg-[#232c3b] border border-[#2e3a4d] rounded-2xl shadow-2xl px-8 py-8 mb-8 w-full max-w-2xl mx-auto flex flex-col items-center" aria-label="Payoff Strategy">
    <div class="w-full">
        <div class="flex items-center space-x-2 text-xl font-extrabold text-blue-300 mb-6">
            <!-- Target Icon -->
            <svg class="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10"/><circle cx="12" cy="12" r="6"/><circle cx="12" cy="12" r="2"/></svg>
            <span>Payoff Strategy</span>
        </div>
    </div>
    <div class="w-full space-y-8">
        <!-- Strategy Selection -->
        <div class="space-y-2">
            <label class="block font-semibold text-slate-200">Payoff Method</label>
            <select class="w-full bg-[#1a223c] border border-[#2e3a4d] rounded-lg px-3 py-2 text-slate-100 focus:ring-2 focus:ring-blue-500" @bind="Strategy">
                <option value="avalanche">Debt Avalanche (Highest Interest First)</option>
                <option value="snowball">Debt Snowball (Lowest Balance First)</option>
            </select>
            <p class="text-xs text-slate-400 mt-1">
                @(Strategy == "avalanche"
                    ? "Pay minimums on all debts, put extra toward highest interest rate"
                    : "Pay minimums on all debts, put extra toward lowest balance")
            </p>
        </div>
        <!-- Extra Payment Slider -->
        <div class="space-y-3">
            <div class="flex justify-between items-center">
                <label class="block font-semibold text-slate-200">Extra Monthly Payment</label>
                <span class="inline-block px-3 py-1 rounded-lg text-base font-bold bg-[#10182a] text-slate-100 border border-[#2e3a4d]">@ExtraPayment.ToString("C0")</span>
            </div>
            <div class="text-xs text-slate-400 mb-1">Minimum payment to pay off in 25 years: <span class="font-bold text-blue-200">@BaselinePayment.ToString("C")</span></div>
            <input type="range" min="0" max="25000" step="25" class="w-full accent-blue-500 bg-[#10182a] rounded-lg h-2" value="@ExtraPayment" @oninput="OnSliderChanged" aria-label="Extra Monthly Payment Slider" />
            <div class="flex justify-between text-xs text-slate-500">
                <span>$0</span>
                <span>$25,000</span>
            </div>
        </div>
        <!-- Results -->
        <div class="space-y-4 pt-4 border-t border-[#2e3a4d] bg-[#1a223c] rounded-xl px-6 py-6 shadow-xl mt-2 w-full" aria-live="polite">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-2">
                    <!-- Calendar Icon -->
                    <svg class="w-5 h-5 text-slate-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="3" y="4" width="18" height="18" rx="2"/><path d="M16 2v4M8 2v4M3 10h18"/></svg>
                    <span class="text-base font-semibold text-slate-200">Time to Debt Freedom</span>
                </div>
                <span class="font-bold px-4 py-1 rounded-lg text-base bg-green-700 text-green-100 tracking-wide" aria-label="Time to Debt Freedom">@((GetExtraResult().PayoffDate?.ToString("MM-dd-yyyy")) ?? "Never")</span>
            </div>
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-2">
                    <!-- TrendingUp Icon -->
                    <svg class="w-5 h-5 text-slate-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M3 17l6-6 4 4 8-8"/></svg>
                    <span class="text-base font-semibold text-slate-200">Total Interest</span>
                </div>
                <span class="font-bold px-4 py-1 rounded-lg text-base bg-orange-700 text-orange-100 tracking-wide" aria-label="Total Interest">@GetExtraResult().TotalInterestWithExtra.ToString("C2")</span>
            </div>
            @if (ExtraPayment > 0)
            {
                <div class="flex items-center justify-between">
                    <span class="text-base font-semibold text-slate-200">Interest Saved</span>
                    <span class="font-bold px-4 py-1 rounded-lg text-base bg-green-800 text-green-200 tracking-wide" aria-label="Interest Saved">@((GetExtraResult().TotalInterest - GetExtraResult().TotalInterestWithExtra).ToString("C2"))</span>
                </div>
                <div class="flex items-center justify-between">
                    <span class="text-base font-semibold text-slate-200">Time Saved</span>
                    <span class="font-bold px-4 py-1 rounded-lg text-base bg-blue-800 text-blue-200 tracking-wide" aria-label="Time Saved">@FormatTimeSaved(GetExtraResult().TimeSaved)</span>
                </div>
            }
        </div>
        <!-- Debt Order -->
        <div class="space-y-2 pt-4 border-t border-[#2e3a4d]">
            <label class="text-base font-semibold text-slate-200">
                @(Strategy == "avalanche" ? "Pay Order (Highest Interest)" : "Pay Order (Lowest Balance)")
            </label>
            <div class="space-y-2">
                @for (int i = 0; i < GetExtraResult().PayoffOrder.Count; i++)
                {
                    var debt = GetExtraResult().PayoffOrder[i];
                    <div class="flex items-center justify-between text-base bg-[#232c3b] rounded-lg p-3 border border-[#2e3a4d]">
                        <div class="flex items-center space-x-3">
                            <span class="inline-block w-7 h-7 rounded-full text-base font-bold bg-[#10182a] text-blue-200 border-2 border-blue-700 flex items-center justify-center">@(i + 1)</span>
                            <span class="font-semibold text-slate-100">@debt.Name</span>
                        </div>
                        <div class="text-slate-400 font-bold">
                            @(Strategy == "avalanche"
                                ? $"{debt.InterestRate:F1}%"
                                : debt.Balance.ToString("C0"))
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div> 